name: Actions

on:
  repository_dispatch:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'

env:
  MIRROR_URL: git@github.com:EpitechPromo2026/B-YEP-400-PAR-4-1-zappy-axel.humeau.git
  EXECUTABLES: zappy_ai,zappy_server,zappy_gui
jobs:
  check_program_compilation:
    if: success()
    runs-on: ubuntu-latest
    container: biozzzzz/zappy_docker:master
    name: check_program_compilation
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: timeout 5m make
      - run: make clean
      - run: |
          IFS=','
          read -ra ADDR <<< "${{ env.EXECUTABLES }}"
          for file in "${ADDR[@]}"
          do
            if [[ ! -f "${file}" || ! -x "${file}" ]]; then
              exit 1
            fi
          done
  check_coding_style:
    needs: [check_program_compilation]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Clone Epitech Github checking Coding style
        run: git clone https://github.com/Epitech/coding-style-checker.git
      - name: Access cloned repository content
        run: |
          chmod +x ./coding-style-checker/coding-style.sh
          ./coding-style-checker/coding-style.sh ./server .
          cat coding-style-reports.log
      - name: Verify coding style
        run: |
            error=false
            while IFS= read -r line; do
                if [[ $line =~ (MAJOR|MINOR|INFO) ]]; then
                        IFS=': '
                        read -r -a array <<< "$line"
                        echo "::error title=Coding style error:: file:${array[0]}, line:${array[1]}, coding-style:${array[2]}-${array[3]}"
                        error=true
                fi
                done < coding-style-reports.log
            if [ $error = true ]
            then
                exit 1
            else
                exit 0
            fi
  run_tests:
    if: success()
    needs: [check_program_compilation]
    runs-on: ubuntu-latest
    container: biozzzzz/zappy_docker:master
    name: run_tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: timeout 10m make tests_run
  push_to_mirror:
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [run_tests, check_coding_style]
    runs-on: ubuntu-latest
    name: push_to_mirror
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
  make_deploy_doxygen:
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [push_to_mirror]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
      - name: Install doxygen
        run: sudo apt-get update; sudo apt-get install -y doxygen
      - name: Create the doxygen
        run: doxygen Doxyfile
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
